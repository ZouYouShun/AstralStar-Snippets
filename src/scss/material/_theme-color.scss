// @import './_color.scss';
@import '../general/_color.scss';
@import '../general/_addStyle.scss';

@mixin theme-color($theme) {

  // @include add-color('c', 'color', $color);
  // @include add-color('bg', 'background-color', $color);
  // @include add-color('bd', 'border-color', $color);
  // get the background and foreground set, and add to global class
  $foreground-group: map-get($theme, foreground);
  $background-group: map-get($theme, background);

  @include add-style('text', 'color', $foreground-group);
  @include add-style('bg', 'background-color', $background-group);

  .bg-background-opacity {
    background-color: rgba(mat-color($background-group, background), 0.5);
  }

  .bg-background-lighten {
    background-color: rgba(lighten(mat-color($background-group, background), 10%), 0.5);
  }

  .bg-background-lighten2 {
    background-color: rgba(lighten(mat-color($background-group, background), 10%), 0.8);
  }

  .bg-background-darken {
    background-color: rgba(darken(mat-color($background-group, background), 10%), 0.5);
  }


}

@mixin theme-generator($name) {
  [#{$name}] {

    $theme: $app-light-theme;
    $text-color: '';

    @if $name=='light' {
      $text-color: rgba(0, 0, 0, 0.87);
    }

    @else if $name=='dark' {
      $theme: $app-dark-theme;
      $text-color: white;
    }

    $theme-colors: (
      "primary": mat-color(map-get($theme, primary)),
      "accent": mat-color(map-get($theme, accent)),
      "warning": mat-color(map-get($theme, warn))
    ) !global;

    $background:mat-color(map-get($theme, background), background);

    @import "~bootstrap/scss/functions";
    @import "~bootstrap/scss/variables";
    @import "~bootstrap/scss/mixins";

    @import "~bootstrap/scss/utilities/background";
    @import "~bootstrap/scss/utilities/borders";
    @import "~bootstrap/scss/utilities/text";

    @include my-material-theme($theme);

    @include theme-color($theme);

    .my-mat-input {
      display: inline-block;

      span {
        color: $text-color;
        font-size: 1em;
        margin-bottom: 0.5em;
        // font-weight: 600;
      }

      .con {
        display: inline-flex;
        flex-direction: column;
        padding-bottom: 1.25em;
      }
    }

    .bottom-fuzzy {

      overflow: hidden;
      position: relative;

      $background:mat-color(map-get($theme, background), card);
      &::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 25px;
        // background: linear-gradient(to bottom, rgba($background, 0)ackground 0%, rgba($background, 0.82) 50%, rgba($background, 1) 100%);
        background: linear-gradient(to bottom, rgba($background, 0) 0%, rgba($background, 0.9) 50%, rgba($background, 1) 100%)
      }
    }
  }
}
